<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.food.mappers.ProductMapper">
  <resultMap id="BaseResultMap" type="com.food.model.Product">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="create_date" jdbcType="TIMESTAMP" property="create_date" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="hot" jdbcType="VARCHAR" property="hot" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="price" jdbcType="NUMERIC" property="price" />
    <result column="priceprev1" jdbcType="NUMERIC" property="priceprev1" />
    <result column="priceprev2" jdbcType="NUMERIC" property="priceprev2" />
    <result column="quantity_remaining" jdbcType="INTEGER" property="quantity_remaining" />
    <result column="sales_volume" jdbcType="INTEGER" property="sales_volume" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="update_date" jdbcType="TIMESTAMP" property="update_date" />
    <result column="merchant_id" jdbcType="INTEGER" property="merchant_id" />
    <result column="weight" jdbcType="INTEGER" property="weight" />
    <result column="priority" jdbcType="INTEGER" property="priority" />
    <result column="discount" jdbcType="INTEGER" property="discount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <!-- cus-->
  <sql id="example_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_date, description, hot, name, price, priceprev1, priceprev2, quantity_remaining, 
    sales_volume, status, update_date, merchant_id, weight, priority, discount
  </sql>
  <select id="selectByExample" parameterType="com.food.model.ProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectAll" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from product
    <if test="example != null">
      <include refid="example_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>

    limit ${page.pageSize} offset ${page.offset}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.food.model.ProductExample">
    delete from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.food.model.Product">
    <selectKey  order="BEFORE" keyProperty="id" resultType="int">
      select nextval('product_seq')
    </selectKey>
    insert into product (id, create_date, description, 
      hot, name, price, priceprev1, 
      priceprev2, quantity_remaining, sales_volume, 
      status, update_date, merchant_id, 
      weight, priority, discount
      )
    values (#{id,jdbcType=INTEGER}, #{create_date,jdbcType=TIMESTAMP}, #{description,jdbcType=VARCHAR}, 
      #{hot,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{price,jdbcType=NUMERIC}, #{priceprev1,jdbcType=NUMERIC}, 
      #{priceprev2,jdbcType=NUMERIC}, #{quantity_remaining,jdbcType=INTEGER}, #{sales_volume,jdbcType=INTEGER}, 
      #{status,jdbcType=VARCHAR}, #{update_date,jdbcType=TIMESTAMP}, #{merchant_id,jdbcType=INTEGER}, 
      #{weight,jdbcType=INTEGER}, #{priority,jdbcType=INTEGER}, #{discount,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.food.model.Product">
    <selectKey  order="BEFORE" keyProperty="id" resultType="int">
      select nextval('product_seq')
    </selectKey>
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="create_date != null">
        create_date,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="hot != null">
        hot,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="priceprev1 != null">
        priceprev1,
      </if>
      <if test="priceprev2 != null">
        priceprev2,
      </if>
      <if test="quantity_remaining != null">
        quantity_remaining,
      </if>
      <if test="sales_volume != null">
        sales_volume,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="update_date != null">
        update_date,
      </if>
      <if test="merchant_id != null">
        merchant_id,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="priority != null">
        priority,
      </if>
      <if test="discount != null">
        discount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="create_date != null">
        #{create_date,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="hot != null">
        #{hot,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=NUMERIC},
      </if>
      <if test="priceprev1 != null">
        #{priceprev1,jdbcType=NUMERIC},
      </if>
      <if test="priceprev2 != null">
        #{priceprev2,jdbcType=NUMERIC},
      </if>
      <if test="quantity_remaining != null">
        #{quantity_remaining,jdbcType=INTEGER},
      </if>
      <if test="sales_volume != null">
        #{sales_volume,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="update_date != null">
        #{update_date,jdbcType=TIMESTAMP},
      </if>
      <if test="merchant_id != null">
        #{merchant_id,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=INTEGER},
      </if>
      <if test="priority != null">
        #{priority,jdbcType=INTEGER},
      </if>
      <if test="discount != null">
        #{discount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.food.model.ProductExample" resultType="java.lang.Long">
    select count(*) from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.create_date != null">
        create_date = #{record.create_date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.hot != null">
        hot = #{record.hot,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=NUMERIC},
      </if>
      <if test="record.priceprev1 != null">
        priceprev1 = #{record.priceprev1,jdbcType=NUMERIC},
      </if>
      <if test="record.priceprev2 != null">
        priceprev2 = #{record.priceprev2,jdbcType=NUMERIC},
      </if>
      <if test="record.quantity_remaining != null">
        quantity_remaining = #{record.quantity_remaining,jdbcType=INTEGER},
      </if>
      <if test="record.sales_volume != null">
        sales_volume = #{record.sales_volume,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.update_date != null">
        update_date = #{record.update_date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.merchant_id != null">
        merchant_id = #{record.merchant_id,jdbcType=INTEGER},
      </if>
      <if test="record.weight != null">
        weight = #{record.weight,jdbcType=INTEGER},
      </if>
      <if test="record.priority != null">
        priority = #{record.priority,jdbcType=INTEGER},
      </if>
      <if test="record.discount != null">
        discount = #{record.discount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product
    set id = #{record.id,jdbcType=INTEGER},
      create_date = #{record.create_date,jdbcType=TIMESTAMP},
      description = #{record.description,jdbcType=VARCHAR},
      hot = #{record.hot,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=NUMERIC},
      priceprev1 = #{record.priceprev1,jdbcType=NUMERIC},
      priceprev2 = #{record.priceprev2,jdbcType=NUMERIC},
      quantity_remaining = #{record.quantity_remaining,jdbcType=INTEGER},
      sales_volume = #{record.sales_volume,jdbcType=INTEGER},
      status = #{record.status,jdbcType=VARCHAR},
      update_date = #{record.update_date,jdbcType=TIMESTAMP},
      merchant_id = #{record.merchant_id,jdbcType=INTEGER},
      weight = #{record.weight,jdbcType=INTEGER},
      priority = #{record.priority,jdbcType=INTEGER},
      discount = #{record.discount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.food.model.Product">
    update product
    <set>
      <if test="create_date != null">
        create_date = #{create_date,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="hot != null">
        hot = #{hot,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=NUMERIC},
      </if>
      <if test="priceprev1 != null">
        priceprev1 = #{priceprev1,jdbcType=NUMERIC},
      </if>
      <if test="priceprev2 != null">
        priceprev2 = #{priceprev2,jdbcType=NUMERIC},
      </if>
      <if test="quantity_remaining != null">
        quantity_remaining = #{quantity_remaining,jdbcType=INTEGER},
      </if>
      <if test="sales_volume != null">
        sales_volume = #{sales_volume,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="update_date != null">
        update_date = #{update_date,jdbcType=TIMESTAMP},
      </if>
      <if test="merchant_id != null">
        merchant_id = #{merchant_id,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=INTEGER},
      </if>
      <if test="priority != null">
        priority = #{priority,jdbcType=INTEGER},
      </if>
      <if test="discount != null">
        discount = #{discount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.food.model.Product">
    update product
    set create_date = #{create_date,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=VARCHAR},
      hot = #{hot,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=NUMERIC},
      priceprev1 = #{priceprev1,jdbcType=NUMERIC},
      priceprev2 = #{priceprev2,jdbcType=NUMERIC},
      quantity_remaining = #{quantity_remaining,jdbcType=INTEGER},
      sales_volume = #{sales_volume,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      update_date = #{update_date,jdbcType=TIMESTAMP},
      merchant_id = #{merchant_id,jdbcType=INTEGER},
      weight = #{weight,jdbcType=INTEGER},
      priority = #{priority,jdbcType=INTEGER},
      discount = #{discount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>